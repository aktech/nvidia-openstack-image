name: Build Ubuntu NVIDIA Image

on: push

env:
  OUTPUT_IMAGE_PATH: /tmp/ubuntu-nvidia
#  ELEMENTS_PATH: /home/runnerx/actions-runner/_work/nvidia-openstack-image/nvidia-openstack-image/elements/
  ELEMENTS_PATH: /home/runner/work/nvidia-openstack-image/nvidia-openstack-image/elements/

jobs:
  build:
#    runs-on: "cirun-runner--${{ github.run_id }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 18

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.2.0
#        env:
#          CONDA: "/home/runnerx/miniconda3"
        with:
          python-version: "3.10"
          miniconda-version: "latest"

      - name: Set output image path
        run: |
          cat .env >> $GITHUB_ENV

      - name: Create output image name
        id: output-image
        run: |
          timestamp=$(date +%s)
          echo "OUTPUT_IMAGE=/tmp/output-image/nvidia-openstack-image-$timestamp" >> $GITHUB_ENV
          echo "OUTPUT_IMAGE=/tmp/output-image/nvidia-openstack-image-$timestamp" >> $GITHUB_OUTPUT

      - name: Install dependencies
        shell: bash -el {0}
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt-get install qemu-utils -y
          pip install -r requirements.txt
          sudo apt install python3-pip -y

#       - name: Debugging with tmate
#         uses: mxschmitt/action-tmate@v3.13

      - name: Run disk image builder
        shell: bash -el {0}
        run: |
          echo "OUTPUT_IMAGE_PATH: $OUTPUT_IMAGE_PATH"
          bash run.sh

      - id: 'upload-file'
        name: Upload built disk image to GCS
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: '/tmp/output-image/'
          destination: 'cirun/images/'
